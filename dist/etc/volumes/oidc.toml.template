# The name of resulting volume with decrypted data, which will be set up below `/dev/mapper/`.
volume = "data0"
# The path to the underlying encrypted device.
dev = "/dev/nvme1n1p1"
# Whether or not to open the LUKS2 device and set up mapping during booting. The default value is false.
auto_open = true
# The file system to initialize on the volume. Allowed values are ["swap", "ext4", "xfs", "vfat"]. If is not specified, or the device is not "empty", i.e. it contains any signature, the operation will be skipped.
makefs = "ext4"
# Whether or not to enable support for data integrity. The default value is false. Note that integrity cannot prevent a replay (rollback) attack.
integrity = true

# Key Broker Service
[encrypt.oidc]
# Command to get the OIDC token
command = "some-cli"
# Arguments to execute command to get OIDC token
args = [
    "-c",
    "/etc/config.json",
    "get-token",
]
# The secret id in the KMS
key_id = "disk-decryption-key"

# authorization service + kms plugin
#
# The detailed OIDC configs for Aliyun KMS
[encrypt.oidc.kms]
type = "aliyun"
# The ARN of the OIDC provider. This should be provided by official documents of Zero-Trust
oidc_provider_arn = "acs:ram::113511544585:oidc-provider/TestOidcIdp"
# The ARN of the RAM Role. This should be provided by official documents of Zero-Trust
role_arn = "acs:ram::113511544585:role/testoidc"
# Region Id of the ECS/KMS.
region_id = "cn-beijing"
